<%#
data: {
    header: header,
    form: obj,
},
const obj = {
    customerID: {
        display: "ID",
        form: false,
    },
    firstName: {
        display: "First Name",
        filter: true,
        form: true,
        input: {
            type: "text",
        },
        // input: "table"
        fromTable: undefined,
    },

    <div class="form-container hidden" id="updateForm" onsubmit="return false;">
    <h3>Update Customer</h3>
    <form class="form" action="none">
      <input type="text" id="updateFirst" placeholder="First Name">
      <input type="text" id="updateLast" placeholder="Last Name">
      <input type="text" id="updateEmail" placeholder="Email">
      <input type="number" id="updatePhone" placeholder="Phone Number (Optional)">
      <button class="button button-update" id="updateBtn">Update Customer</button>
      <button class="button button-red" id="updateCancelBtn">Cancel</button>
    </form>
  </div>
%>

<div class="form-container hidden" id="updateFormContainer">
  <h3>Update <%= data.title %> ID: <span id="updateFormIDDisplay"></span></h3>
  <form class="form" action="update" method="post" autocomplete="off" id="updateForm">
    <input type="hidden" id="updateFormID" name="id" value="">
    <% for (const key of data.order) { 
      let entry = data.form[key];
      if (entry.form !== false) { %>
        <div class="input-group">
          <% if (entry.join) { %>
            <label for="<%= `update${key}` %>"><%= entry.display %>:</label>
            <select name="<%= key %>" id="<%= `update${key}` %>">
              <option value="" disabled selected>[Select <%= entry.display %>]</option>
              <% (data.additionalData[key] || []).forEach(option => {
                const keys = Object.keys(option);
                const value = option[keys[0]]; // Assuming the first property is the actual value.
                let displayText = keys.slice(1).map(k => option[k]).join(' '); // Concatenate the rest of the properties.
                if (entry.join.appendUnit) {
                  displayText += `${entry.join.appendUnit}`; // Append units to the display text
                }
                %>
                <option value="<%= value %>"><%= `${value}: ${displayText}` %></option>
              <% }); %>
            </select>
          <% } else { %>
            <!-- Render regular input field -->
            <label for="<%= `update${key}` %>"><%= entry.display %>:</label>
            <input 
              type="<%= entry.input.type %>"
              min="<%= entry.input.min !== undefined ? entry.input.min : '' %>"
              max="<%= entry.input.max !== undefined ? entry.input.max : '' %>"
              required="<%= entry.input.required === 'true' ? 'required' : '' %>"
              placeholder="<%= entry.input.placeholder %>"
              pattern="<%= entry.input.pattern %>"
              name="<%= key %>"
              id="<%= `update${key}` %>"
              value="<%= entry.currentValue %>"
            />
          <% } %>
        </div>
      <% }
    } %>
    <input type="submit" class="button button-blue" id="updateBtn" value="Update">
    <button type="button" class="button button-red" id="updateCancelBtn" onclick="hideUpdate(event)">Cancel</button>
  </form>
</div>




  <script>
    // document.getElementById('updateFormID').value = id;
    // console.log("ID HERE",)
    // let updateForm = document.getElementById("updateForm");
    // updateForm.action = document.URL + `/update/${id}`;
  </script>
  
